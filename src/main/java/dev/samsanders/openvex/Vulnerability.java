package dev.samsanders.openvex;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.net.URI;
import java.util.Collection;
import java.util.Objects;

/**
 * A cataloged defect in a software product
 */
@JsonInclude(Include.NON_NULL)
public final class Vulnerability {

    /**
     * A string with the main identifier used to name the vulnerability.
     */
    @JsonProperty(value = "name", required = true)
    private final String name;

    /**
     * An Internationalized Resource Identifier (IRI) identifying the struct.
     */
    @JsonProperty("@id")
    private URI id;

    /**
     * Optional free form text describing the vulnerability.
     */
    private String description;

    /**
     * A list of strings enumerating other names under which the vulnerability may
     * be known.
     */
    private Collection<String> aliases;

    @JsonCreator
    public Vulnerability(@JsonProperty(value = "name", required = true) String name) {
        this.name = name;
    }

    public String getName() {
        return this.name;
    }

    public URI getId() {
        return this.id;
    }

    public void setId(URI id) {
        this.id = id;
    }

    public Object getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Collection<String> getAliases() {
        return aliases;
    }

    public void setAliases(Collection<String> aliases) {
        this.aliases = aliases;
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, id, description, aliases);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (!(obj instanceof Vulnerability))
            return false;
        Vulnerability other = (Vulnerability) obj;
        return Objects.equals(name, other.name) && Objects.equals(id, other.id)
                && Objects.equals(description, other.description) && Objects.equals(aliases, other.aliases);
    }

    @Override
    public String toString() {
        return "Vulnerability [name=" + name + ", id=" + id + ", description=" + description + ", aliases=" + aliases
                + "]";
    }

}
